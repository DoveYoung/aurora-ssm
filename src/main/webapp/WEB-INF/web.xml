<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>aurorascm</display-name>
  
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	classpath:spring.xml,
    	classpath:spring-mybatis.xml,
    	classpath:spring-shiro.xml,
    	classpath:spring-redis.xml
    	<!--classpath:spring-task.xml-->
    </param-value>
  </context-param>
    
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--用来在session创建事件获取HttpServletRequest request-->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <!-- 使用spring的监听器,当应用启动时来读取log4j的配置文件-->
  <listener>
	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <!-- session监听-->
  <listener>  
	<listener-class>com.aurorascm.listener.MySessionListener</listener-class>  
  </listener>  
  
  <filter>  
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 连接池 配置 Druid 监控信息显示页面    start-->
  <filter>
	<filter-name>DruidWebStatFilter</filter-name>
	<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
	<!-- 经常需要排除一些不必要的url，比如*.js,/jslib/*等等 -->  
	<init-param>
		<param-name>exclusions</param-name>
		<param-value>*.js ,*.gif ,*.jpg ,*.png ,*.css ,*.ico ,/druid /*</param-value>
	</init-param>
	<!-- druid 0.2.7版本开始支持profile，配置profileEnable能够监控单个url调用的sql列表-->  
	<init-param>
	    <param-name>profileEnable</param-name>
	    <param-value>true</param-value>
	</init-param>
	<!-- 缺省sessionStatMaxCount是1000个。你可以按需要进行配置 -->  
	<init-param>
  		<param-name>sessionStatMaxCount</param-name>
  		<param-value>1000</param-value>
  	</init-param>
  	<!-- 配置principalSessionName，使得druid能够知道当前的session的用户是谁   --> 
  	<init-param>
  		<param-name>principalSessionName</param-name>
  		<param-value>customerName</param-value>
  	</init-param>
  </filter>
  <filter-mapping >
	<filter-name >DruidWebStatFilter</filter-name>
	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <servlet >
	<servlet-name>DruidStatView</servlet-name>
	<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	<init-param>  <!-- 允许清空统计数据 --> 
		<param-name>resetEnable</param-name>  
		<param-value>true</param-value>  
    </init-param>  
    <init-param>  <!-- 用户名 -->  
		<param-name>loginUsername</param-name>  
		<param-value>druid</param-value>  
    </init-param>  
    <init-param>  <!-- 密码 -->  
		<param-name>loginPassword</param-name>  
		<param-value>druid</param-value>  
    </init-param> 
  </servlet>
  <servlet-mapping>
	  <servlet-name>DruidStatView</servlet-name>
	  <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  <!-- 连接池 配置 Druid 监控信息显示页面  end-->
  
  <servlet>
    <servlet-name>springDispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springDispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <!-- 银联支付自动加载servlet
  <servlet>
    <servlet-name>autoLoadServlet</servlet-name>
    <servlet-class>com.aurorascm.unionpay.sdk.AutoLoadServlet</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>autoLoadServlet</servlet-name>
    <url-pattern>/autoLoadServlet</url-pattern>
  </servlet-mapping>
   -->
  
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>
  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/jsp/404.jsp</location>
  </error-page>
</web-app>